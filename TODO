- Object should be printed as a collapsible tree? Do not use JSON formatting. Leafs are primitive types.
  Arrays are also printed as trees, at the beginning of the array the length in brackets '()' is printed
- Do not show the whole error stacktrace, only the collapsed error tree

- Code window can be resized
- On F11 make the window full size, Esc minimize. Add maximize/minimize buttons?

- Bug: document.querySelector('textarea') results in "TypeError: Converting circular structure to JSON"

- Console evaluation results can be persisted to local storage and retrieved back when restarted
- Replaying the stored evaluation sessions? Store just the code snippets themselves?
- "Copy" button for editor
- "Pretty print" button for editor
- "History" button for editor that will show the history of evaluated commands
  -- History can be cleared

- Code evaluation history is stored and can be accessed: last 10 snippets? all snippets? search snippet history?

- Make into a plugin for Chrome
- Make into a plugin for Firefox

Infrastructure:
- Setup unit testing
- Code linting
- Split Webpack configuration into separate files
- Use Typescript with the project?
- "Production" build without a source map, minified

*** Nice to have ***

- Code is highlighted and formatted (CodeMirror)
  -- Highlight also code errors if it is malformed? Does CodeMirror support this?
  -- Incorrect expressions are highlighted as invalid before being evaluated, error message is shown, 'Evaluate button' is disabled
- Optionally integrate ESLint into the editor so that errors are highlighted?

*** Document / Fix ***

- Defined 'const' is not available in subsequent evaluations because 'eval' is used